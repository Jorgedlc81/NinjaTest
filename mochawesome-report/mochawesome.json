{
  "stats": {
    "suites": 1,
    "tests": 6,
    "passes": 5,
    "pending": 0,
    "failures": 1,
    "start": "2025-06-06T16:54:04.213Z",
    "end": "2025-06-06T16:54:31.211Z",
    "duration": 26998,
    "testsRegistered": 6,
    "passPercent": 83.33333333333334,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "e1185d8d-ef2b-43fa-8bcd-54200b5df8d6",
      "title": "",
      "fullFile": "C:\\Users\\Jorge\\Desktop\\Ninja_Test\\test\\loginTest.js",
      "file": "\\test\\loginTest.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "130bcc4a-a0dc-4822-8501-5d94dc7a37e2",
          "title": "Login Tests",
          "fullFile": "C:\\Users\\Jorge\\Desktop\\Ninja_Test\\test\\loginTest.js",
          "file": "\\test\\loginTest.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Login Tests\"",
              "fullTitle": "Login Tests \"before each\" hook in \"Login Tests\"",
              "timedOut": false,
              "duration": 1966,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await new Builder().forBrowser('chrome').build();\nawait driver.get('https://app.ninjarmm.com/auth/#/login');",
              "err": {},
              "uuid": "6234c387-006a-45df-83d4-ec0573b77d48",
              "parentUUID": "130bcc4a-a0dc-4822-8501-5d94dc7a37e2",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Login Tests\"",
              "fullTitle": "Login Tests \"after each\" hook in \"Login Tests\"",
              "timedOut": false,
              "duration": 59,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.quit();",
              "err": {},
              "uuid": "6a87f426-b219-4b3d-8e06-3751d71e953c",
              "parentUUID": "130bcc4a-a0dc-4822-8501-5d94dc7a37e2",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "TC_LOGIN_001 - Valid login",
              "fullTitle": "Login Tests TC_LOGIN_001 - Valid login",
              "timedOut": false,
              "duration": 11076,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "await performLogin(driver, testData.validCredentials.username, testData.validCredentials.password);\nawait driver.wait(until.urlContains('mfa'), 10000);\nconst currentUrl = await driver.getCurrentUrl();\nassert.ok(currentUrl.includes('mfa'), `Login failed or not redirected: current URL is ${currentUrl}`);",
              "err": {
                "message": "TimeoutError: Waiting for URL to contain \"mfa\"\nWait timed out after 10178ms",
                "estack": "TimeoutError: Waiting for URL to contain \"mfa\"\nWait timed out after 10178ms\n    at C:\\Users\\Jorge\\Desktop\\Ninja_Test\\node_modules\\selenium-webdriver\\lib\\webdriver.js:929:22\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)",
                "diff": null
              },
              "uuid": "27c5acd5-89df-46e4-8061-e125bb95ccd3",
              "parentUUID": "130bcc4a-a0dc-4822-8501-5d94dc7a37e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC_LOGIN_002 - Invalid Password",
              "fullTitle": "Login Tests TC_LOGIN_002 - Invalid Password",
              "timedOut": false,
              "duration": 881,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await performLogin(driver, testData.validCredentials.username, testData.invalidCredentials.password);\nconst alert = await driver.wait(until.elementLocated(By.css('.alert.alert-danger')));\nconst message = await alert.getText();\nassert.ok(message.length > 0, 'Expected error message not found');",
              "err": {},
              "uuid": "4f081ece-2f3f-43ad-887e-b4aba07b7479",
              "parentUUID": "130bcc4a-a0dc-4822-8501-5d94dc7a37e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC_LOGIN_003 - Invalid UserName",
              "fullTitle": "Login Tests TC_LOGIN_003 - Invalid UserName",
              "timedOut": false,
              "duration": 894,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await performLogin(driver, testData.invalidCredentials.username, testData.validCredentials.password);\nconst alert = await driver.wait(until.elementLocated(By.css('.alert.alert-danger')));\nconst message = await alert.getText();\nassert.ok(message.length > 0, 'Expected error message not found');",
              "err": {},
              "uuid": "dbc34a57-1538-4ac8-b3bd-7840250d2ff6",
              "parentUUID": "130bcc4a-a0dc-4822-8501-5d94dc7a37e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC_LOGIN_004 - Blank fields",
              "fullTitle": "Login Tests TC_LOGIN_004 - Blank fields",
              "timedOut": false,
              "duration": 886,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await performLogin(driver, testData.invalidCredentials.username, testData.validCredentials.password);\nconst errorGroup = await driver.wait(until.elementLocated(By.css('.form-group.has-error')));\nassert.ok(await errorGroup.isDisplayed(), 'Email field is not marked with an error');",
              "err": {},
              "uuid": "1f9f8855-4519-4315-81d0-11397664e5a7",
              "parentUUID": "130bcc4a-a0dc-4822-8501-5d94dc7a37e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC_LOGIN_005 - Forgot Password Navigation",
              "fullTitle": "Login Tests TC_LOGIN_005 - Forgot Password Navigation",
              "timedOut": false,
              "duration": 517,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const forgotLink = await driver.wait(until.elementLocated(By.css('a[href=\"#/resetPassword\"]')), 5000);\nawait forgotLink.click();\nawait driver.wait(until.urlIs('https://app.ninjarmm.com/auth/#/resetPassword'), 5000);\nconst currentUrl = await driver.getCurrentUrl();\nassert.ok(currentUrl.includes('resetPassword'), `Login failed or not redirected: current URL is ${currentUrl}`);",
              "err": {},
              "uuid": "e5a2248f-b9b1-44bd-bbda-b36457ddfa1d",
              "parentUUID": "130bcc4a-a0dc-4822-8501-5d94dc7a37e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC_LOGIN_006 - Registration Navigation",
              "fullTitle": "Login Tests TC_LOGIN_006 - Registration Navigation",
              "timedOut": false,
              "duration": 525,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const signUpLink = await driver.wait(until.elementLocated(By.css('a[href=\"#/register\"]')), 5000);\nawait signUpLink.click();\nawait driver.wait(until.urlContains('https://app.ninjarmm.com/auth/#/register'),5000);\nconst currentUrl = await driver.getCurrentUrl();\nassert.ok(currentUrl.includes('register'), `Failed to navigate to registration page. Current URL: ${currentUrl}`);",
              "err": {},
              "uuid": "2f44a3ab-0ff2-42af-a399-0b8e5fde0336",
              "parentUUID": "130bcc4a-a0dc-4822-8501-5d94dc7a37e2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4f081ece-2f3f-43ad-887e-b4aba07b7479",
            "dbc34a57-1538-4ac8-b3bd-7840250d2ff6",
            "1f9f8855-4519-4315-81d0-11397664e5a7",
            "e5a2248f-b9b1-44bd-bbda-b36457ddfa1d",
            "2f44a3ab-0ff2-42af-a399-0b8e5fde0336"
          ],
          "failures": [
            "27c5acd5-89df-46e4-8061-e125bb95ccd3"
          ],
          "pending": [],
          "skipped": [],
          "duration": 14779,
          "root": false,
          "rootEmpty": false,
          "_timeout": 20000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "11.5.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}